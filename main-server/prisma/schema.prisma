// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

// model User {
//   id          Int       @id @default(autoincrement())
//   name        String  
//   email       String    @unique
//   password    String 
//   folders     Folder[]
// }

// model Folder {
//   id                Int       @id @default(autoincrement())
//   name              String    @unique
//   userId            Int
//   parentfolderId    Int
//   user              User      @relation(fields: [userId],references: [id])
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  name     String
  folders  Folder[]
  files    File[]
}

model Folder {
  id       Int      @id @default(autoincrement())
  name     String
  userId   Int
  user     User     @relation(fields: [userId], references: [id])
  parentId Int?     // For nested folders
  parent   Folder?  @relation("Subfolders", fields: [parentId], references: [id])
  subfolders Folder[] @relation("Subfolders")
  files    File[]
}

model File {
  id       Int      @id @default(autoincrement())
  name     String
  url      String
  userId   Int
  user     User     @relation(fields: [userId], references: [id])
  folderId Int?
  folder   Folder?  @relation(fields: [folderId], references: [id])
}



